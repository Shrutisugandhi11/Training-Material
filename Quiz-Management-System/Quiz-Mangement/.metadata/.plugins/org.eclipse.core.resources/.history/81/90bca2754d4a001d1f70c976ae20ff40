package com.epam.quiz.management.ui;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import com.epam.quiz.management.exception.InvalidInputException;
import com.epam.quiz.management.util.Scanner;

public class AdminUi {
	private static final Logger Logger = LogManager.getLogger(AdminUi.class);

	public void getQuizCrud() {

		Logger.debug("===============================================");

		QuizUi quizCrud = new QuizUi();
		boolean isBool = true;
		try {
			while (isBool) {

				Logger.info("Which Operation do You want to perform?");
				Logger.info("Enter: \n 1.Create Quiz \n 2.View Quiz \n 3.Delete a Quiz \n 4.logout \nYour Choice:");

				int key = Scanner.getInstance().nextInt();

				switch (key) {
				case 1:
					Logger.debug(quizCrud.create());
					break;

				case 2:
					quizCrud.read();
					break;

				case 3:
					Logger.debug(quizCrud.delete());
					break;

				default:
					isBool = false;
					Logger.debug("----------------Thank you-----------------");
					break;
				}

			}
			throw new InvalidInputException("Entered Invalid Input");
		} catch (InvalidInputException e) {

		}
	}

	public void getQuestionCrud() {
		try {
			QuestionUi questionCrud = new QuestionUi();

			boolean isBool = true;
			while (isBool) {
				Logger.debug("===============================================");
				Logger.info("Which operation do you want to perform?");
				Logger.info(
						" 1.Create a Question \n 2.View a Question \n 3.Remove a Question \n 4.Modify a Question \n 5.Logout");
				int option = Scanner.getInstance().nextInt();

				switch (option) {
				case 1:
					Logger.debug(questionCrud.create());
					break;
				case 2:
					questionCrud.read();
					break;
				case 3:
					Logger.debug(questionCrud.update());
					break;

				case 4:
					Logger.debug(questionCrud.delete());
					break;

				default:
					isBool = false;
					Logger.debug("------------Thank you--------------");
					break;

				}
			}
			throw new InvalidInputException(" Entered Invalid operation");
		}

		catch (InvalidInputException e) {

		}

	}

	public void prompt() {
		UserOperation userOperation = new UserOperation();
		try {
			boolean isBool = true;
			while (isBool) {
				Logger.debug("===============================================");
				Logger.info(
						"What operation do you wan to perform? \n 1.registerUser  \n 2.getAllUsers \n 3.removeUser \n 4.Exit");
				int option = Scanner.getInstance().nextInt();

				switch (option) {
				case 1:
					Logger.info("Enter Username");
					String username = Scanner.getInstance().nextLine();
					Logger.info("Enter Passward");
					String passwordString = Scanner.getInstance().nextLine();
					Logger.debug(userOperation.register(username, passwordString));

					break;
				case 2:
					userOperation.getAllUsers();
					break;

				case 3:
					String usernameString = Scanner.getInstance().nextLine();
					Logger.debug(userOperation.removeUser(usernameString));
					break;

				default:
					isBool = false;
					Logger.debug("------------Thank you--------------");
					break;

				}
			}
			throw new InvalidInputException(" Entered Invalid operation");
		}

		catch (InvalidInputException e) {

		}
	}

}