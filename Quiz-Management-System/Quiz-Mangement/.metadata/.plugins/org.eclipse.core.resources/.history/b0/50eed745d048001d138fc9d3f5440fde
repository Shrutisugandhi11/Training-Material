package com.epam.quiz.management.service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import com.epam.quiz.management.dao.QuizDao;
import com.epam.quiz.management.model.Quiz;

public class QuizLibrary implements CrudService<Quiz> {

	private static List<Quiz> quizes = QuizDao.getQuizs();

	@Override
	public String create(Quiz quiz) {
		quizes.add(quiz);
		return "Quiz created succesfully";
	}

	@Override
	public List<Quiz> read() {
		return quizes;
	}

	@Override
	public Quiz readById(int id) {
		Quiz quiz = quizes.stream().filter(quiz1 -> quiz1.getId() == id).findAny().get();
		return quiz;
	}

	public List<Quiz> readByTag(String tag) {

		List<Quiz> quiz = quizes.stream().filter(quiz1 -> quiz1.getTag() == tag).collect(Collectors.toList());
		return quiz;
	}

	@Override
	public Quiz update(int id, String value) {
		Quiz quiz = readById(id);
		quiz.setTag(value);
		return quiz;
	}

	@Override
	public String delete(int id) {
		String returnString;

		Optional<Quiz> quiz = quizes.stream().filter(quiz1 -> quiz1.getId() == id).findAny();

		if (quiz.isPresent()) {
			quizes.remove(quiz);
			returnString = "Quiz deleted successfully";
		} else {
			returnString = "Quiz not found";
		}

		return returnString;
	}

	@Override
	public String toString() {
		return "QuizLibrary quizes=" + quizes + "";
	}

}
